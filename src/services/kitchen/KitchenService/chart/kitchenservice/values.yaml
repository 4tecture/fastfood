# Default values for kitchenservice.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

# This will set the replicaset count more information can be found here: https://kubernetes.io/docs/concepts/workloads/controllers/replicaset/
replicaCount: 1

# This sets the container image more information can be found here: https://kubernetes.io/docs/concepts/containers/images/
image:
  repository: 4tectureregistry.azurecr.io/fastfood-kitchenservice
  # This sets the pull policy for images.
  pullPolicy: Always
  # Overrides the image tag whose default is the chart appVersion.
  tag: "latest"

# This is for the secretes for pulling an image from a private repository more information can be found here: https://kubernetes.io/docs/tasks/configure-pod-container/pull-image-private-registry/
imagePullSecrets: []
# This is to override the chart name.
nameOverride: ""
fullnameOverride: ""

#This section builds out the service account more information can be found here: https://kubernetes.io/docs/concepts/security/service-accounts/
serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Automatically mount a ServiceAccount's API credentials?
  automount: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

# This is for setting Kubernetes Annotations to a Pod.
# For more information checkout: https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/ 
podAnnotations:
  dapr.io/enabled: "true"
  dapr.io/app-id: "kitchenservice"
  dapr.io/app-port: "8080"
# This is for setting Kubernetes Labels to a Pod.
# For more information checkout: https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/
podLabels: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

# This is for setting up a service more information can be found here: https://kubernetes.io/docs/concepts/services-networking/service/
service:
  # This sets the service type more information can be found here: https://kubernetes.io/docs/concepts/services-networking/service/#publishing-services-service-types
  type: ClusterIP
  # This sets the ports more information can be found here: https://kubernetes.io/docs/concepts/services-networking/service/#field-spec-ports
  port: 8080

# This block is for setting up the ingress for more information can be found here: https://kubernetes.io/docs/concepts/services-networking/ingress/
ingress:
  enabled: false
  className: ""
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: chart-example.local
      paths:
        - path: /
          pathType: ImplementationSpecific
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

# This is to setup the liveness and readiness probes more information can be found here: https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/
livenessProbe:
  httpGet:
    path: /healthz
    port: http
readinessProbe:
  httpGet:
    path: /healthz
    port: http

#This section is for setting up autoscaling more information can be found here: https://kubernetes.io/docs/concepts/workloads/autoscaling/
autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

# Additional volumes on the output Deployment definition.
volumes: []
# - name: foo
#   secret:
#     secretName: mysecret
#     optional: false

# Additional volumeMounts on the output Deployment definition.
volumeMounts: []
# - name: foo
#   mountPath: "/etc/foo"
#   readOnly: true

nodeSelector: {}

tolerations: []

affinity: {}

observability:
  # The name of the service being observed.
  serviceName: KitchenService
  
  # Type of exporter to use for tracing. Supported values: "zipkin", "otlp", "console", "none".
  useTracingExporter: otlp

  # Type of exporter to use for metrics. Supported values: "prometheus", "otlp", "console", "none".
  useMetricsExporter: otlp

  # Type of exporter to use for logs. Supported values: "console", "otlp", "jsonconsole".
  useLogExporter: otlpandansiconsole

  # Defines how histograms aggregate data. Supported values: "explicit", "exponential".
  histogramAggregation: explicit
  
  # Whether or not to enable instrumentation for sql client.
  enableSqlClientFrameworkInstrumentation: false

  # Whether or not to enable instrumentation for Entity Framework.
  enableEntityFrameworkInstrumentation: false

  # Whether or not to enable instrumentation for Redis.
  enableRedisInstrumentation: false
  
  # Whether or not to enable instrumentation for ASP.NET Core
  enableAspNetCoreInstrumentation: true
  
  # Whether or not to enable instrumentation for HTTP client
  enableHttpClientInstrumentation: true

  # Defines the sampling strategy. Supported values: "AlwaysOnSampler", "AlwaysOffSampler", "TraceIdRatioBasedSampler".
  samplerType: AlwaysOnSampler

  # Ratio for sampling when using "TraceIdRatioBasedSampler". Value between 0 and 1.
  samplingRatio: 0.1
  
  zipkinExporter:
    # Endpoint for the Zipkin exporter.
    endpoint: http://zipkin:9411/api/v2/spans

  otlpExporter:
    # Endpoint for the OTLP exporter.
    endpoint: http://otel-collector.monitoring.svc.cluster.local:4317

  aspNetCoreInstrumentation:
    # Whether or not to record exceptions in the instrumentation.
    recordException: true

  logLevels:
    # Default log level. Supported values: "Trace", "Debug", "Information", "Warning", "Error", "Critical", "None".
    default: Information

    # Log level filters for specific namespaces or categories.
    filters:
      Microsoft: Error
      System: Warning
